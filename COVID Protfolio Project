SELECT TOP (1000) [iso_code]
      ,[continent]
      ,[location]
      ,[date]
      ,[population]
      ,[total_cases]
      ,[new_cases]
      ,[new_cases_smoothed]
      ,[total_deaths]
      ,[new_deaths]
      ,[new_deaths_smoothed]
      ,[total_cases_per_million]
      ,[new_cases_per_million]
      ,[new_cases_smoothed_per_million]
      ,[total_deaths_per_million]
      ,[new_deaths_per_million]
      ,[new_deaths_smoothed_per_million]
      ,[reproduction_rate]
      ,[icu_patients]
      ,[icu_patients_per_million]
      ,[hosp_patients]
      ,[hosp_patients_per_million]
      ,[weekly_icu_admissions]
      ,[weekly_icu_admissions_per_million]
      ,[weekly_hosp_admissions]
      ,[weekly_hosp_admissions_per_million]
  FROM [PortfolioProject].[dbo].[CovidDeaths]
  Order by 3, 4

--Select *
--FROM CovidVaccinations
--Order by 3, 4

SELECT location, date, total_cases, new_cases, total_deaths, population
FROM CovidDeaths

--Looking at total cases Vs total deaths
--Shows the likelihood if you contract covid in your country

SELECT location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
FROM CovidDeaths
WHERE location like '%Egypt%'
and continent is not NULL

--Looking at the total cases Vs the population
--Shows what percentage of the population got covid

SELECT location, date, total_cases, population, (total_cases/population)*100 as CasesPercentage
FROM CovidDeaths
WHERE location like '%Egypt%'
and continent is not NULL

--Looking at countries with highest infection rate compared to population
SELECT location, MAX (total_cases) as HighestInfectionCount, population, MAX ((total_cases/population))*100 as PercentPopulationInfected
FROM CovidDeaths
--WHERE location like '%Egypt%'
WHERE continent is not NULL
Group by location, population
Order by PercentPopulationInfected DESC

--Shows the countries with the highest death count per population
SELECT location, MAX (total_deaths) as TotalDeathCount
FROM CovidDeaths
WHERE continent is not NULL
Group by location
Order by TotalDeathCount DESC

--Showing continents with the highest death count per population
SELECT continent, MAX (total_deaths) as TotalDeathCount
FROM CovidDeaths
WHERE continent is not NULL
Group by continent
Order by TotalDeathCount DESC

--Global numbers 
SELECT date, SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, SUM(new_deaths)/SUM(new_cases) *100 as DeathPercentage
FROM CovidDeaths
where continent is not NULL
GROUP BY date
order by 1,2

--Global cases and deaths numbers summary
SELECT SUM(new_cases) as total_cases, SUM(new_deaths) as total_deaths, SUM(new_deaths)/SUM(new_cases) *100 as DeathPercentage
FROM CovidDeaths
where continent is not NULL


--Looking at the total vaccinations Vs population
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
SUM(cast (vac.new_vaccinations as int)) OVER (partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
FROM CovidDeaths dea 
JOIN CovidVaccinations vac 
  on dea.location = vac.location
  and dea.date = vac.date
where dea.continent is not NULL
order by 2,3

--USING CTE FOR PERCENTAGE
With 
PopVsVac (Continent, Location, Date, Population, new_vaccinations, RollingPeopleVaccinated)
as
(
    SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
  , SUM(cast(vac.new_vaccinations as int)) OVER (partition by dea.location order by dea.location, dea.date) 
  as RollingPeopleVaccinated
  FROM CovidDeaths dea 
  JOIN CovidVaccinations vac 
    on dea.location = vac.location
    and dea.date = vac.date
  where dea.continent is not NULL
)
SELECT *, (RollingPeopleVaccinated/Population)*100
FROM PopVsVac

--Temp Table

Drop Table if exists #PercentPopulationVaccinated
CREATE TABLE #PercentPopulationVaccinated
(Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population NUMERIC,
New_vaccinations NUMERIC,
RollingPeopleVaccinated NUMERIC
)

INSERT INTO #PercentPopulationVaccinated

  SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
  , SUM(cast(vac.new_vaccinations as int)) OVER (partition by dea.location order by dea.location, dea.date) 
  as RollingPeopleVaccinated
  FROM CovidDeaths dea 
  JOIN CovidVaccinations vac 
    on dea.location = vac.location
    and dea.date = vac.date
  --where dea.continent is not NULL

SELECT *, (RollingPeopleVaccinated/Population)*100
FROM #PercentPopulationVaccinated

--Creating view to store data for later visualizations
Create view PercentPopulationVaccinated as 
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
  , SUM(cast(vac.new_vaccinations as int)) OVER (partition by dea.location order by dea.location, dea.date) 
  as RollingPeopleVaccinated
  FROM CovidDeaths dea 
  JOIN CovidVaccinations vac 
    on dea.location = vac.location
    and dea.date = vac.date
where dea.continent is not NULL